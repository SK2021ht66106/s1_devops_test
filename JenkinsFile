pipeline {
    environment{
        dockerImage = ''
    }
    agent any
    stages {
        stage('CodeCheckout') {
            steps {
                // Get some code from a GitHub repository
                checkout changelog: false, poll: false, scm: [$class: 'GitSCM', branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/ashiq-mohd19/s1_devops_test.git']]]

            }
        }
        stage('Build') {
            steps {
                bat 'cd %WORKSPACE%'
                bat 'python.exe -m compileall application.py test_hello.py'
            }
        } 
        
        stage('Test') {
            steps {
                bat 'cd %WORKSPACE%'
                bat 'py.test'
                bat 'rmdir  /S /Q  __pycache__ .pytest_cache'
                
            }
        }
        
        stage('Build-Docker-Image') {
            steps{
                script{
                        
                        withCredentials([usernamePassword( credentialsId: 'sk-dockerhub', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) 
                        {
                                bat 'docker login --username %USERNAME% --password %PASSWORD%'
                                dockerImage = docker.build("srinijakammari/devops") 
                                docker.withRegistry('https://registry.hub.docker.com', 'sk-dockerhub') {
                                    bat "docker login -u %USERNAME% -p %PASSWORD%"
                                    dockerImage.push("$BUILD_NUMBER")
                                    dockerImage.push("latest")
                                }
                        }
                    }
            }
        }
        
        
        
    }
}

